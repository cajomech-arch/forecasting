library(fpp3)
library(forecast)
library(tseries)
library(urca)



setwd("C:/Users/Varse Hakobyan/Downloads")
US_City_Temp_Data <- read.csv("US_City_Temp_Data.csv")

#Convert time column to Date format and filter from 1990 onward
US_City_Temp_Data$time <- as.Date(US_City_Temp_Data$time)
US_City_Temp_Data <- US_City_Temp_Data[US_City_Temp_Data$time >= as.Date("1990-01-01"), ]

# Extract New York temperature data
ny_temp <- US_City_Temp_Data$new_york

# Create time series object
# Monthly data from January 1990 to December 2022
ny_ts <- ts(ny_temp, 
            start = c(1990, 1), 
            frequency = 12)

# Plot the time series
plot(ny_ts, 
     main = "Monthly Average Temperature - New York",
     xlab = "Year", 
     ylab = "Temperature")

#stationarity: check with a ADF test for stationarity

adf.test(ny_ts, k = 12) #K is 1 year (12 months) from now
#the ADF test shows the data is stationary (p value < 0.05)

#ACF and PACF functions

pacf(ny_ts) #AR order p = 1
acf(ny_ts) #MA order q = 1

# create the SARIMA model

tsMod <- Arima(ny_ts, order = c(1,0,1), seasonal = c(1,1,1))

print(tsMod)

forecast(tsMod, h = 12)
autoplot(forecast(tsMod, h = 12))

ny_df <- as_tsibble(ny_ts) 
# if this doesn't work, do this instead:
# ny_df <- tsibble(value = as.numeric(ny_ts), index = yearmonth(seq(from = as.Date("1990-01-01"), by = "month", length.out = length(ny_ts))))

# Fit and compare multiple ARIMA models
ny_models <- ny_df %>% 
  model(
    arima111011 = ARIMA(value ~ pdq(1,1,1) + PDQ(0,1,1)),
    arima101111 = ARIMA(value ~ pdq(1,0,1) + PDQ(1,1,1)),
    arima111111 = ARIMA(value ~ pdq(1,1,1) + PDQ(1,1,1)),
    arima211111 = ARIMA(value ~ pdq(2,1,1) + PDQ(1,1,1)),
    auto = ARIMA(value)
  ) %>%
  glance() %>%
  select(Model = .model, AICc, AIC, BIC)


ny_fit <- ny_df %>%
  model(
    arima111011 = ARIMA(value ~ pdq(1,1,1) + PDQ(0,1,1)),
    arima101111 = ARIMA(value ~ pdq(1,0,1) + PDQ(1,1,1)),
    arima111111 = ARIMA(value ~ pdq(1,1,1) + PDQ(1,1,1)),
    arima211111 = ARIMA(value ~ pdq(2,1,1) + PDQ(1,1,1)),
    auto = ARIMA(value)
  )

res1 <- augment(ny_fit) %>% 
  filter(.model == 'arima111011') %>% 
  features(.innov, ljung_box, lag = 11, dof = 3)

res2 <- augment(ny_fit) %>% 
  filter(.model == 'arima101111') %>% 
  features(.innov, ljung_box, lag = 11, dof = 4)

res3 <- augment(ny_fit) %>% 
  filter(.model == 'arima111111') %>% 
  features(.innov, ljung_box, lag = 11, dof = 4)

res4 <- augment(ny_fit) %>% 
  filter(.model == 'arima211111') %>% 
  features(.innov, ljung_box, lag = 11, dof = 5)

bind_rows(res1, res2, res3, res4)

# Split train/test
train <- ny_df %>% filter_index("1990-01-01" ~ "2022-11-01")
test  <- ny_df %>% filter_index("2023-01-01" ~ "2025-11-01")

# Fit the best ARIMA on training data
ny_model <- train %>%
  model(best = ARIMA(value ~ pdq(2,1,1) + PDQ(0,1,1)))

# Forecast for 12 months
ny_forecast <- ny_model %>% forecast(h = 12)

# Check forecast accuracy against test set
ny_forecast %>%
  accuracy(data = test) %>%   # <-- must provide test data here
  kable()




